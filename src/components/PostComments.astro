<div id="tcomment" class="mx-auto mt-10 w-full transition-colors duration-300"></div>

<script is:inline>
  // 常量定义 - 与主题系统保持一致
  const LIGHT_MODE = "light";
  const DARK_MODE = "dark";
  const AUTO_MODE = "auto";
  const DEFAULT_THEME = AUTO_MODE;

  // 获取当前实际主题状态（考虑自动模式）
  function getCurrentActualTheme() {
    const storedTheme = localStorage.getItem("theme") || DEFAULT_THEME;
    
    if (storedTheme === AUTO_MODE) {
      return window.matchMedia("(prefers-color-scheme: dark)").matches ? DARK_MODE : LIGHT_MODE;
    }
    return storedTheme;
  }

  // 获取 Twikoo 主题配置
  function getTwikooTheme() {
    const currentTheme = getCurrentActualTheme();
    return currentTheme === DARK_MODE ? "dark" : "light";
  }

  // 更新 Twikoo 主题
  function updateTwikooTheme() {
    if (window.twikoo && window.twikoo.update) {
      const theme = getTwikooTheme();
      try {
        window.twikoo.update({
          theme: theme
        });
        console.log(`Twikoo theme updated to: ${theme}`);
      } catch (error) {
        console.warn("Failed to update Twikoo theme:", error);
      }
    }
  }

  // 加载 Twikoo 评论组件
  function loadTwikoo() {
    // 防止重复加载
    if (window.twikooLoaded) {
      return;
    }

    // 动态加载 Twikoo 脚本
    const script = document.createElement("script");
    script.src = "https://cdn.jsdelivr.net/npm/twikoo@1.6.39/dist/twikoo.all.min.js";
    script.async = true;

    script.onload = () => {
      console.log("Twikoo script loaded");
      window.twikooLoaded = true;

      // 初始化 Twikoo
      if (window.twikoo) {
        window.twikoo.init({
          envId: "https://twikoojs.freebird2913.tech/",
          el: "#tcomment",
          lang: "zh-CN",
          theme: getTwikooTheme(),
          onCommentLoaded: () => {
            console.log("Twikoo comments loaded");
          }
        });
      }
    };

    script.onerror = () => {
      console.error("Failed to load Twikoo script");
    };

    document.head.appendChild(script);
  }

  // 监听主题变化事件
  function setupThemeChangeListener() {
    // 监听存储变化（主要用于多标签页同步）
    window.addEventListener("storage", (event) => {
      if (event.key === "theme") {
        updateTwikooTheme();
      }
    });

    // 监听系统主题偏好变化（用于自动模式）
    const darkModeMediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
    const handleSystemThemeChange = () => {
      const storedTheme = localStorage.getItem("theme") || DEFAULT_THEME;
      if (storedTheme === AUTO_MODE) {
        updateTwikooTheme();
      }
    };
    
    // 使用现代 addEventListener 方法
    darkModeMediaQuery.addEventListener("change", handleSystemThemeChange);

    // 监听自定义主题变化事件（与主题切换组件配合）
    document.addEventListener("themeChanged", () => {
      setTimeout(() => updateTwikooTheme(), 100);
    });
  }

  // 初始化函数
  function initTwikooComments() {
    // 确保主题状态在页面刷新后正确应用
    const currentTheme = getCurrentActualTheme();
    const documentHasDarkClass = document.documentElement.classList.contains("dark");
    const shouldBeDark = currentTheme === DARK_MODE;

    // 修复可能的主题状态不一致
    if (shouldBeDark && !documentHasDarkClass) {
      document.documentElement.classList.add("dark");
    } else if (!shouldBeDark && documentHasDarkClass) {
      document.documentElement.classList.remove("dark");
    }

    // 设置主题监听器
    setupThemeChangeListener();

    // 加载 Twikoo
    loadTwikoo();
  }

  // 页面加载时初始化
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initTwikooComments);
  } else {
    initTwikooComments();
  }

  // 导出全局函数供外部调用
  window.updateTwikooTheme = updateTwikooTheme;
</script>