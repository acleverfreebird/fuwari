---
import { Icon } from "astro-icon/components";
import { profileConfig } from "../../config";
import { getDailyQuote } from "../../utils/quote-utils";
import { url } from "../../utils/url-utils";
import ImageWrapper from "../misc/ImageWrapper.astro";

const config = profileConfig;

let totalViews = 0;
let totalReads = 0;
let dailyQuote = { content: "加载中...", author: "" };

if (import.meta.env.SSR) {
	// 获取每日一言
	try {
		dailyQuote = await getDailyQuote();
	} catch (error) {
		console.error("[DEBUG] Profile: Failed to fetch daily quote:", error);
	}

	// 获取总阅读量和访问量
	try {
		console.log(
			"[DEBUG] Profile: Fetching total counts from:",
			`${Astro.url.origin}/api/views/total`,
		);
		const response = await fetch(`${Astro.url.origin}/api/views/total`);
		console.log("[DEBUG] Profile: Response status:", response.status);
		console.log("[DEBUG] Profile: Response ok:", response.ok);

		if (response.ok) {
			const data = await response.json();
			console.log("[DEBUG] Profile: Response data:", data);
			totalViews = data.totalViews;
			totalReads = data.totalReads;
			console.log(
				"[DEBUG] Profile: Total views:",
				totalViews,
				"Total reads:",
				totalReads,
			);
		} else {
			const errorText = await response.text();
			console.error(
				"[DEBUG] Profile: API Error - Status:",
				response.status,
				"Body:",
				errorText,
			);
		}
	} catch (error) {
		console.error("[DEBUG] Profile: Fetch error:", error);
	}
}
---
<div class="card-base p-3">
    <a aria-label="Go to About Page" href={url('/about/')}
       class="group block relative mx-auto mt-1 lg:mx-0 lg:mt-0 mb-3
       max-w-[12rem] lg:max-w-none overflow-hidden rounded-xl active:scale-95">
        <div class="absolute transition pointer-events-none group-hover:bg-black/30 group-active:bg-black/50
        w-full h-full z-50 flex items-center justify-center">
            <Icon name="fa6-regular:address-card"
                  class="transition opacity-0 scale-90 group-hover:scale-100 group-hover:opacity-100 text-white text-5xl">
            </Icon>
        </div>
        <ImageWrapper src={config.avatar || ""} alt="Profile Image of the Author" class="mx-auto lg:w-full h-full lg:mt-0 " priority={true}></ImageWrapper>
    </a>
    <div class="px-2">
        <div class="font-bold text-xl text-center mb-1 dark:text-neutral-50 transition">{config.name}</div>
        <div class="h-1 w-5 bg-[var(--primary)] mx-auto rounded-full mb-2 transition"></div>
        <div class="text-center text-neutral-400 mb-2.5 transition">{config.bio}</div>
        <div class="quote-container border-t border-neutral-200 dark:border-neutral-700 pt-2 mb-2.5">
            <div class="text-center text-sm italic text-neutral-500 dark:text-neutral-400">{dailyQuote.content}</div>
            {dailyQuote.author &&
                <div class="text-center text-xs text-neutral-400 dark:text-neutral-500 mt-1">—— {dailyQuote.author}</div>
            }
        </div>
        <div class="flex gap-2 justify-center mb-1">
            {config.links.length > 1 && config.links.map(item =>
                    <a rel="me" aria-label={item.name} href={item.url} target="_blank" class="btn-regular rounded-lg h-10 w-10 active:scale-90">
                        <Icon name={item.icon} class="text-[1.5rem]"></Icon>
                    </a>
            )}
            {config.links.length == 1 && <a rel="me" aria-label={config.links[0].name} href={config.links[0].url} target="_blank"
                                            class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95">
                <Icon name={config.links[0].icon} class="text-[1.5rem]"></Icon>
                {config.links[0].name}
            </a>}
        </div>
        <div class="text-center text-neutral-400 text-sm mt-2">
            总阅读量: <span id="total-reads">{totalReads}</span> / 总访问量: <span id="total-views">{totalViews}</span>
        </div>
    </div>
</div>

<script>
  const fetchTotalCounts = async () => {
    try {
      console.log("[DEBUG] Profile Client: Fetching total counts from /api/views/total");
      const response = await fetch("/api/views/total");
      console.log("[DEBUG] Profile Client: Response status:", response.status);
      console.log("[DEBUG] Profile Client: Response ok:", response.ok);
      
      if (response.ok) {
        const data = await response.json();
        console.log("[DEBUG] Profile Client: Response data:", data);
        const totalViewsElement = document.getElementById("total-views");
        const totalReadsElement = document.getElementById("total-reads");
        if (totalViewsElement) {
          console.log("[DEBUG] Profile Client: Updating total views to:", data.totalViews);
          totalViewsElement.textContent = data.totalViews;
        }
        if (totalReadsElement) {
          console.log("[DEBUG] Profile Client: Updating total reads to:", data.totalReads);
          totalReadsElement.textContent = data.totalReads;
        }
      } else {
        const errorText = await response.text();
        console.error("[DEBUG] Profile Client: API Error - Status:", response.status, "Body:", errorText);
      }
    } catch (error) {
      console.error("[DEBUG] Profile Client: Fetch error:", error);
    }
  };

  document.addEventListener("DOMContentLoaded", () => {
    console.log("[DEBUG] Profile Client: DOM loaded, fetching total counts");
    fetchTotalCounts();
  });
</script>

