---
import type { CollectionEntry } from "astro:content";
import path from "node:path";
import License from "@components/misc/License.astro";
import Markdown from "@components/misc/Markdown.astro";
import I18nKey from "@i18n/i18nKey";
import { i18n } from "@i18n/translation";
import MainGridLayout from "@layouts/MainGridLayout.astro";
import { getSortedPosts } from "@utils/content-utils";
import { getDir, getPostUrlBySlug } from "@utils/url-utils";
import { Icon } from "astro-icon/components";
import { licenseConfig } from "src/config";
import ImageWrapper from "../../components/misc/ImageWrapper.astro";
import PostMetadata from "../../components/PostMeta.astro";
import { profileConfig, siteConfig } from "../../config";
import "@/styles/markdown.css";
import { formatDateToYYYYMMDD } from "../../utils/date-utils";

interface Props {
	entry: CollectionEntry<"posts">;
}

export async function getStaticPaths() {
	const blogEntries = await getSortedPosts();
	return blogEntries.map((entry: CollectionEntry<"posts">) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props as Props;
const { Content, headings } = await entry.render();

const { remarkPluginFrontmatter } = await entry.render();

const jsonLd = {
	"@context": "https://schema.org",
	"@type": "BlogPosting",
	headline: entry.data.title,
	description: entry.data.description || entry.data.title,
	keywords: entry.data.tags,
	author: {
		"@type": "Person",
		name: profileConfig.name,
		url: Astro.site,
	},
	datePublished: formatDateToYYYYMMDD(entry.data.published),
	inLanguage: entry.data.lang
		? entry.data.lang.replace("_", "-")
		: siteConfig.lang.replace("_", "-"),
	// TODO include cover image here
};
---
<MainGridLayout banner={entry.data.image} title={entry.data.title} description={entry.data.description} lang={entry.data.lang} setOGTypeArticle={true} headings={headings}>
    <script is:inline slot="head" type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>
    <!-- 确保URL规范化，避免必应索引问题 -->
    <link slot="head" rel="canonical" href={new URL(`posts/${entry.slug}/`, Astro.site).href} />
    
    <!-- 预连接 Giscus 以优化评论加载 -->
    <link slot="head" rel="preconnect" href="https://giscus.app" />
    <link slot="head" rel="dns-prefetch" href="https://giscus.app" />
    <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4">
        <div id="post-container" class:list={["card-base z-10 px-6 md:px-9 pt-6 pb-4 relative w-full ",
            {}
        ]}>
            <!-- word count and reading time -->
            <div class="flex flex-row text-black/30 dark:text-white/30 gap-5 mb-3 transition onload-animation">
                <div class="flex flex-row items-center">
                    <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
                        <Icon name="material-symbols:notes-rounded"></Icon>
                    </div>
                    <div class="text-sm">{remarkPluginFrontmatter.words} {" " + i18n(I18nKey.wordsCount)}</div>
                </div>
                <div class="flex flex-row items-center">
                    <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
                        <Icon name="material-symbols:schedule-outline-rounded"></Icon>
                    </div>
                    <div class="text-sm">
                        {remarkPluginFrontmatter.minutes} {" " + i18n(remarkPluginFrontmatter.minutes === 1 ? I18nKey.minuteCount : I18nKey.minutesCount)}
                    </div>
                </div>
            </div>

            <!-- title -->
            <div class="relative onload-animation">
                <h1
                    data-pagefind-body data-pagefind-weight="10" data-pagefind-meta="title"
                    class="transition w-full block font-bold mb-3
                    text-3xl md:text-[2.25rem]/[2.75rem]
                    text-black/90 dark:text-white/90
                    md:before:w-1 before:h-5 before:rounded-md before:bg-[var(--primary)]
                    before:absolute before:top-[0.75rem] before:left-[-1.125rem]
                ">
                    {entry.data.title}
                </h1>
            </div>

            <!-- metadata -->
            <div class="onload-animation">
                <PostMetadata
                        class="mb-5"
                        published={entry.data.published}
                        updated={entry.data.updated}
                        tags={entry.data.tags}
                        category={entry.data.category}
                ></PostMetadata>
                {!entry.data.image && <div class="border-[var(--line-divider)] border-dashed border-b-[1px] mb-5"></div>}
            </div>

            <!-- always show cover as long as it has one -->

            {entry.data.image &&
                <ImageWrapper
                    id="post-cover"
                    src={entry.data.image}
                    basePath={path.join("content/posts/", getDir(entry.id))}
                    class="mb-8 rounded-xl banner-container onload-animation"
                    priority={false}
                />
            }


            <Markdown class="mb-6 markdown-content onload-animation">
                <Content />
            </Markdown>

            {licenseConfig.enable && <License title={entry.data.title} slug={entry.slug} pubDate={entry.data.published} class="mb-6 rounded-xl license-container onload-animation"></License>}

        </div>
    </div>


    <div id="comments-container" class="card-base p-6 rounded-[var(--radius-large)] mb-4">
        <div id="giscus-placeholder" class="min-h-[200px] flex items-center justify-center">
            <button
                id="load-comments"
                class="btn-card px-6 py-3 rounded-lg font-medium transition-all hover:scale-105 active:scale-95"
            >
                💬 加载评论
            </button>
        </div>
    </div>

    <script is:inline>
    (function() {
        let giscusLoaded = false;
        
        function loadGiscus() {
            if (giscusLoaded) return;
            giscusLoaded = true;
            
            const placeholder = document.getElementById('giscus-placeholder');
            if (!placeholder) return;
            
            // 显示加载提示
            placeholder.innerHTML = '<div class="text-center text-sm text-gray-500 py-4">正在加载评论...</div>';
            
            const script = document.createElement('script');
            script.src = 'https://giscus.app/client.js';
            script.setAttribute('data-repo', 'acleverfreebird/fuwari');
            script.setAttribute('data-repo-id', 'R_kgDOPbwShw');
            script.setAttribute('data-category', 'General');
            script.setAttribute('data-category-id', 'DIC_kwDOPbwSh84CuH7J');
            script.setAttribute('data-mapping', 'og:title');
            script.setAttribute('data-strict', '0');
            script.setAttribute('data-reactions-enabled', '1');
            script.setAttribute('data-emit-metadata', '0');
            script.setAttribute('data-input-position', 'top');
            script.setAttribute('data-theme', 'preferred_color_scheme');
            script.setAttribute('data-lang', 'zh-CN');
            script.setAttribute('crossorigin', 'anonymous');
            script.async = true;
            
            // 监听 Giscus 加载完成
            script.onload = function() {
                // Giscus 脚本加载完成后，等待其渲染
                setTimeout(function() {
                    // 检查 Giscus 是否已渲染
                    const giscusFrame = placeholder.querySelector('.giscus, iframe.giscus-frame');
                    if (giscusFrame) {
                        // 清除加载提示，只保留 Giscus 内容
                        const loadingMsg = placeholder.querySelector('.text-gray-500');
                        if (loadingMsg) {
                            loadingMsg.remove();
                        }
                    }
                }, 1000);
            };
            
            script.onerror = function() {
                placeholder.innerHTML = '<div class="text-center text-sm text-red-500 py-4">评论加载失败，请刷新页面重试</div>';
            };
            
            placeholder.appendChild(script);
        }

        // 方案1: 用户点击加载按钮
        const loadButton = document.getElementById('load-comments');
        if (loadButton) {
            loadButton.addEventListener('click', loadGiscus);
        }

        // 方案2: 滚动到评论区域自动加载（使用 Intersection Observer）
        const commentsContainer = document.getElementById('comments-container');
        if (commentsContainer && 'IntersectionObserver' in window) {
            const observer = new IntersectionObserver(
                function(entries) {
                    entries.forEach(function(entry) {
                        if (entry.isIntersecting) {
                            // 延迟500ms加载，给用户一个缓冲
                            setTimeout(loadGiscus, 500);
                            observer.disconnect();
                        }
                    });
                },
                {
                    rootMargin: '200px', // 提前200px开始加载
                    threshold: 0.1
                }
            );
            
            observer.observe(commentsContainer);
        }
    })();
    </script>

    <div class="flex flex-col md:flex-row justify-between mb-4 gap-4 overflow-hidden w-full">
        {
            entry.data.nextSlug ?
            <a href={getPostUrlBySlug(entry.data.nextSlug)}
               class:list={["w-full font-bold overflow-hidden active:scale-95"]}>
                <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center !justify-start gap-4" >
                    <Icon name="material-symbols:chevron-left-rounded" class="text-[2rem] text-[var(--primary)]" />
                    <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
                        {entry.data.nextTitle}
                    </div>
                </div>
            </a> :
            <div class:list={["w-full font-bold overflow-hidden", "pointer-events-none"]}>
            </div>
        }

        {
            entry.data.prevSlug ?
            <a href={getPostUrlBySlug(entry.data.prevSlug)}
               class:list={["w-full font-bold overflow-hidden active:scale-95"]}>
                <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center !justify-end gap-4">
                    <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
                        {entry.data.prevTitle}
                    </div>
                    <Icon name="material-symbols:chevron-right-rounded" class="text-[2rem] text-[var(--primary)]" />
                </div>
            </a> :
            <div class:list={["w-full font-bold overflow-hidden", "pointer-events-none"]}>
            </div>
        }
    </div>

</MainGridLayout>

